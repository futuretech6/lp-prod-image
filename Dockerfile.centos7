FROM --platform=$BUILDPLATFORM centos:7

ARG TARGETOS
ARG TARGETARCH

# directory for installing dependencies
ARG TMP_DIR=/tmp

# cmake-src
ARG CMAKE_VERSION=3.27.9
RUN --mount=type=cache,target=${TMP_DIR} \
    CMAKE_MINOR_VERSION=$(echo "${CMAKE_VERSION}" | cut -d'.' -f1-2) && \
    mkdir -p ${TMP_DIR}/cmake-src && \
    curl -L https://cmake.org/files/v${CMAKE_MINOR_VERSION}/cmake-${CMAKE_VERSION}.tar.gz \
        | tar -zx -C ${TMP_DIR}/cmake-src --strip-components=1

# boost-src
ARG BOOST_VERSION=1.53.0
RUN --mount=type=cache,target=${TMP_DIR} \
    BOOST_DASHED_VERSION=$(echo "${BOOST_VERSION}" | tr '.' '_') && \
    mkdir -p ${TMP_DIR}/boost-src && \
    curl -L https://archives.boost.io/release/${BOOST_VERSION}/source/boost_${BOOST_DASHED_VERSION}.tar.gz \
        | tar -zx -C ${TMP_DIR}/boost-src --strip-components=1

# protobuf-src
ARG PROTOBUF_VERSION=2.5.0
RUN --mount=type=cache,target=${TMP_DIR} \
    mkdir -p ${TMP_DIR}/protobuf-src && \
    curl -L https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.gz \
        | tar -zx -C ${TMP_DIR}/protobuf-src --strip-components=1

# gosu
ARG GOSU_VERSION=1.14
RUN curl -Lo /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${TARGETARCH}" && \
    chmod +x /usr/local/bin/gosu && \
    gosu nobody true

# yum install dependencies
RUN --mount=type=cache,target=/var/cache/yum \
# centos mirrors
    sed -e 's|^mirrorlist=|# mirrorlist=|g' \
        -e 's|^#\s*baseurl=http://mirror.centos.org|baseurl=https://vault.centos.org|g' \
        -i /etc/yum.repos.d/CentOS-*.repo && \
# scl mirrors for devtoolset
    yum install -y centos-release-scl && \
    sed -e 's|^mirrorlist=|# mirrorlist=|g' \
        -e 's|^#\s*baseurl=http://mirror.centos.org|baseurl=https://vault.centos.org|g' \
        -i /etc/yum.repos.d/CentOS-*.repo && \
# devtoolset-7
    yum install -y devtoolset-7 && \
# dev tools
    # yum groupinstall -y "Development Tools" && \
    yum install -y gcc-c++ make && \
# cmake dependencies, git is for cmake module config
    yum install -y openssl-devel git && \
# boost dependencies, zlib-devel and bzip2-devel is for v1.53.0
    yum install -y which python2-devel zlib-devel bzip2-devel && \
# # pre-built boost-1.53.0 (python2-devel for `#include <python2.7/Python.h>`)
#     yum install -y boost boost-devel python2-devel && \
# protobuf dependencies
    yum install -y libtool && \
# # pre-built protobuf-2.5.0 (cannot get pre-built gtest)
#     yum install -y protobuf protobuf-devel protobuf-compiler && \
# other tools
    yum install -y sudo && \
# other dependencies of lp system
    yum install -y uriparser-devel \
                   elfutils-libelf-devel \
                   gtest-devel && \
# other dependencies
    yum install -y libpcap-devel

# cmake, git is for cmake module config
WORKDIR ${TMP_DIR}/cmake-src
RUN --mount=type=cache,target=${TMP_DIR} \
    ./bootstrap --parallel=$(nproc) && \
    make -j$(nproc) && \
    make -j$(nproc) install

# boost, zlib-devel and bzip2-devel is for v1.53.0
WORKDIR ${TMP_DIR}/boost-src
RUN --mount=type=cache,target=${TMP_DIR} \
    ./bootstrap.sh --with-python=/usr/bin/python2.7 --prefix=/usr/ && \
    ./b2 install -j$(nproc)
RUN [ -e /lib/libboost_python.so ] || ln -s /lib/libboost_python27.so /lib/libboost_python.so  # for v1.67.0

# protobuf
WORKDIR ${TMP_DIR}/protobuf-src
RUN --mount=type=cache,target=${TMP_DIR} \
    ./autogen.sh && \
    ./configure && \
    make -j$(nproc) && \
    make -j$(nproc) check && \
    make install

# starship
RUN curl -sSf https://starship.rs/install.sh | sh -s -- -y
RUN /usr/local/bin/starship preset plain-text-symbols -o /etc/starship.toml
RUN tee -a /etc/bashrc <<"EOF"
eval "$(starship init bash)"
export STARSHIP_CONFIG=/etc/starship.toml
EOF

# update lib
RUN ldconfig

# entrypoint
COPY entrypoint.redhat.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

# default command and mount directory
ENV WORKSPACE=/workspace
WORKDIR $WORKSPACE
CMD ["/bin/bash"]
